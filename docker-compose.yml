
services:
  # Servizio Frontend
  # Gestisce i tuoi file statici (HTML/CSS) con un server web leggero.
  frontend:
    build:
      context: .
      dockerfile: src/frontend/Dockerfile
    ports:
      - "3000:80"             # Mappa la porta 3000 della tua macchina alla porta 80 di Nginx
       
  # Servizio Backend
  # Avvia il tuo server Node.js che espone le API.
  backend:
    build:
      context: .                  # root del progetto
      dockerfile: src/backend/Dockerfile
    ports:
      - "5000:5000"           # Mappa la porta 5000
    depends_on:
      - db                      # Assicura che il database sia avviato prima del backend
    #environment:
      # Variabile d'ambiente per la connessione al database
      #DATABASE_URL: postgres://coworkspace_user:cachemeifyoucan@db:5432/coworkspace_db
    env_file:
      - .env
    volumes:
      - ./firebase-service-account.json:/usr/src/firebase-service-account.json:ro
    environment:
      - FIREBASE_SERVICE_ACCOUNT_PATH=/usr/src/firebase-service-account.json
  # Servizio Database (PostgreSQL)
  # Un database relazionale per i dati della tua applicazione.
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: coworkspace_db
      POSTGRES_USER: coworkspace_user
      POSTGRES_PASSWORD: cachemeifyoucan
    volumes:
      - db-data:/var/lib/postgresql/data          # Volume per la persistenza dei dati
      - ./src/init.sql:/docker-entrypoint-initdb.d/init.sql # Esegue script di inizializzazione
    ports:
      - "5432:5432"
      
volumes:
  db-data: